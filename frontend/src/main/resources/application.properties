#
server.port = 8443
server.ssl.key-store = file:/var/run/secrets/fabric8.io/tls-jks/keystore.jks
server.ssl.ciphers = TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_3DES_EDE_CBC_SHA
server.ssl.protocol = TLSv1.2

#server.port=8080
#
keycloak.auth-server-url=https://secure-sso-rh-sso.192.168.136.2.nip.io/auth
keycloak.realm=SpringBootSSODemo
keycloak.resource=frontend
keycloak.public-client=true
keycloak.ssl-required=all
keycloak.truststore=/run/secrets/fabric8.io/tls-jks/keystore.jks
keycloak.truststore-password=changeit

# (development) only need - SSO server has its own self-signed cert
keycloak.disable-trust-manager=true
keycloak.allow-any-hostname=true

#keycloak.use-resource-role-mappings=true

#
# These are not required if using SpringBootSecurity
# see ProductAppApplication::SecurityConfig
#
#keycloak.security-constraints[0].authRoles[0]=user
#keycloak.security-constraints[0].securityCollections[0].patterns[0]=/products/*
#
# Add this for Principal
keycloak.principal-attribute=preferred_username

keycloak.cors=true
#keycloak.cors-allowed-headers=x-requested-with,origin,content-type,accept,authorization
#keycloak.cors-allowed-methods=GET,POST,DELETE,PUT,OPTIONS

#keycloak.ssl-required=external

# keycloak.cors-max-age=3600
# keycloak.expose-token=true
# keycloak.bearer-only=true

service.url=https://backend:443/protected
